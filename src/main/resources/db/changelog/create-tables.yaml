databaseChangeLog:
  - changeSet:
      id: create-logo-table
      author: Alexey Udalykh
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: logo
      changes:
        - createTable:
            tableName: logo
            columns:
              - column: { name: id, type: int, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: data, type: blob, constraints: { nullable: false } }
              - column: { name: name, type: varchar(256), constraints: { nullable: false } }
              - column: { name: type, type: varchar(64), constraints: { nullable: false } }
  - changeSet:
      id: create-clinic-table
      author: Alexey Udalykh
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: clinic
      changes:
        - createTable:
            tableName: clinic
            columns:
              - column: { name: id, type: int, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(100), constraints: { nullable: false } }
              - column: { name: email, type: varchar(128), constraints: { nullable: false } }
              - column: { name: phone, type: varchar(32), constraints: { nullable: false } }
              - column: { name: logo_id, type: int, constraints:
                          { nullable: false, foreignKeyName: "fk_clinic_logo", references: "logo(id)" } }
              - column: { name: from_hour, type: integer, constraints: { nullable: false } }
              - column: { name: to_hour, type: integer, constraints: { nullable: false } }
  - changeSet:
      id: create-person-table
      author: Alexey Udalykh
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: person
      changes:
        - createTable:
            tableName: person
            columns:
              - column: { name: id, type: int, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: first_name, type: varchar(50), constraints: { nullable: false } }
              - column: { name: last_name, type: varchar(50), constraints: { nullable: false } }
              - column: { name: email, type: varchar(128), constraints: { nullable: false } }
              - column: { name: password, type: varchar(128), constraints: { nullable: false } }
              - column: { name: created_at, type: TIMESTAMP, defaultValueComputed: CURRENT_TIMESTAMP, constraints: { nullable: false } }
              - column: { name: last_login_at, type: TIMESTAMP, constraints: { nullable: true } }
              - column: { name: type, type: varchar(1), constraints: { nullable: false } }
              - column: { name: deleted, type: boolean, defaultValue: "false", constraints: { nullable: false } }
        - createIndex:
            # this combination is going to be used often for person searching
            indexName: idx_person_email
            tableName: person
            columns:
              - column: { name: email }
              - column: { name: type }
              - column: { name: deleted }
  - changeSet:
      id: create-appointment-table
      author: Alexey Udalykh
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: appointment
      changes:
        - createTable:
            tableName: appointment
            columns:
              - column: { name: id, type: int, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: created_at, type: TIMESTAMP, defaultValueComputed: CURRENT_TIMESTAMP, constraints: { nullable: false } }
              - column: { name: patient_id, type: int, constraints: { nullable: false } }
              - column: { name: created_by_id, type: int, constraints: { nullable: false } }
              - column: { name: updated_by_id, type: int, constraints: { nullable: false } }
              - column: { name: status, type: VARCHAR(16), constraints: { nullable: false } }
              - column: { name: updated_at, type: TIMESTAMP, constraints: { nullable: true } }
              - column: { name: revisit_date_time, type: TIMESTAMP }
              - column: { name: deleted, type: BOOLEAN, defaultValue: "false", constraints: { nullable: false } }
        - addForeignKeyConstraint:
            baseTableName: appointment
            baseColumnNames: patient_id
            constraintName: fk_appointment_patient
            referencedTableName: person
            referencedColumnNames: id
        - addForeignKeyConstraint:
            baseTableName: appointment
            baseColumnNames: created_by_id
            constraintName: fk_appointment_doctor_created
            referencedTableName: person
            referencedColumnNames: id
        - addForeignKeyConstraint:
            baseTableName: appointment
            baseColumnNames: updated_by_id
            constraintName: fk_appointment_doctor_updated
            referencedTableName: person
            referencedColumnNames: id
  - changeSet:
      id: create-test-table
      author: Alexey Udalykh
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: test
      changes:
        - createTable:
            tableName: test
            columns:
              - column: { name: id, type: int, autoIncrement: true, constraints: { primaryKey: true, nullable: false } }
              - column: { name: appointment_id, type: int, constraints: { nullable: false } }
              - column: { name: type, type: VARCHAR(12), constraints: { nullable: false } }
              - column: { name: test_date_time, type: TIMESTAMP, constraints: { nullable: false } }
              - column: { name: result, type: VARCHAR(12), constraints: { nullable: true } }
              - column: { name: result_date_time, type: TIMESTAMP }
              - column: { name: deleted, type: BOOLEAN, defaultValue: "false", constraints: { nullable: false } }
        - addForeignKeyConstraint:
            baseTableName: test
            baseColumnNames: appointment_id
            constraintName: fk_test_appointment
            referencedTableName: appointment
            referencedColumnNames: id